
{% if entry.slug == 'most-listened-to-songs-on-spotify' %}
    
    <style>
        .track-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        .track-list .track-header {
            background-color: #f2f2f2;
            border-radius: 4px;
            font-weight: 700;
            height: 38px;
            /*margin-top: -22px;*/
        }
        .track-list .track-header:first-child {
            background-color: #131b28;
            color: #FFFFFF;
            margin-top: 0;
        }
        .track-list > div {
            display: flex;
            align-items: center;
            border-bottom: solid 2px #f2f2f2;
            gap: 20px;
        }
        .track-list > div:not(.track-header) {
            padding-bottom: 15px;
        }
        .track-list > div.track-before-header {
            border-bottom: none;
            padding-bottom: 0;
        }
        .track-list > div > div a {
            color: #000000;
        }
        .track-list > div > div a:hover {
            color: #0a79a4;
        }
        .track-list > div > div:first-child {
            padding-left: 14px;
        }
        .track-list > div > div.album-img {
            width: 100px;
        }
        .track-list > div > div.album-img a img {
            width: 100%;
            aspect-ratio: 1/1;
        }
        .track-list > div > div:nth-child(3) a {
            display: inline-block;
            font-weight: 700;
            margin-bottom: 6px;
        }
        .track-list > div > div:nth-child(4) {
            display: none;
            flex: 1;
        }
        .track-list > div > div:nth-child(4) span {
            margin-left: 8px;
            color: #575757;
        }
        @media (min-width: 576px) {
            .track-list > div > div:nth-child(3) {
                width: 200px;
            }
            .track-list > div > div:nth-child(4) {
                display: block;
            }
        }
        @media (min-width: 768px) {
            .track-list > div > div:nth-child(3) {
                width: 250px;
            }
        }
    </style>

    <script defer>
        const client_id = '49d373d2f6ba41b983353e6a63a212fe';
        const client_secret = '04d179ad9052446798f25481f9598af3';
        const playlistId = '5ABHKGoOzxkaa28ttQV9sE';
        const numberOfTracks = 100;

        const getAccessToken = async () => {
          const response = await fetch('https://accounts.spotify.com/api/token', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
              'Authorization': 'Basic ' + btoa(`${client_id}:${client_secret}`)
            },
            body: 'grant_type=client_credentials'
          });

          const data = await response.json();
          return data.access_token;
        };

        const getTopTracks = async () => {
          const token = await getAccessToken();
          const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=${numberOfTracks}`, {
            headers: {
              'Authorization': `Bearer ${token}`
            }
          });

          const data = await response.json();

          const topTracks = data.items.map((item, index) => ({
            rank: index + 1,
            name: item.track.name,
            playcount: item.track.play_count,
            artist: item.track.artists.map(artist => artist.name).join(', '),
            url: item.track.external_urls.spotify,
            album: {
                name: item.track.album.name,
                release_date: item.track.album.release_date,
                url: item.track.album.external_urls.spotify,
                images: item.track.album.images
            }
          }));

          displayTopTracks(topTracks);
        };

        const getHeader = function()
        {
            var html = '<div class="track-header">';
            html += `<div>#</div><div class="album-img"></div><div>Song</div><div>Album</div>`;
            html += '</div>';

            return html;
        }

        const displayTopTracks = (tracks) => {

            if(tracks.length)
            {
                var html = '<div class="track-list">';

                html += getHeader();

                tracks.forEach(track => {

                    if(track.rank === 1)
                    {
                        var trackParts = track.url.split('/');
                        var trackId = trackParts[trackParts.length - 1];
                        var trackPlayer = document.querySelector('.track-player');

                        if(trackPlayer)
                        {
                            trackPlayer.innerHTML = `<iframe style="border-radius:12px" src="https://open.spotify.com/embed/track/${trackId}?utm_source=generator&theme=0" width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`;
                        }
                    }

                    html += (track.rank % 20 === 0) ? '<div class="track-before-header">' : '<div>';
                    html += `<div>${track.rank}</div><div class="album-img"><a title="Open Album on Spotify" href="${track.album.url}" target="_blank"><img src="${track.album.images[0].url}" /></a></div>`;
                    html += `<div><a title="Open Song on Spotify" href="${track.url}" target="_blank">${track.name}</a><br><span>${track.artist}</span></div>`;
                    html += `<div><a title="Open Album on Spotify" href="${track.album.url}" target="_blank">${track.album.name}</a> <span>(${track.album.release_date.split('-')[0]})</span></div>`;
                    html += '</div>';

                    if(track.rank < numberOfTracks && track.rank % 20 === 0)
                    {
                        html += getHeader();
                    }
                });

                html += '</div>';

                document.querySelector('.blog-body').innerHTML += html;
            }
        };

        getTopTracks().catch(error => {
          console.log('Error fetching top tracks:' + error);
        });
    </script>
{% endif %}