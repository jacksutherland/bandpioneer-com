
{% if entry.slug == 'most-listened-to-songs-on-spotify' %}
    
    <style>
        .track-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        .track-list .track-header {
            background-color: #f2f2f2;
            border-radius: 4px;
            font-weight: 700;
            height: 38px;
        }
        .track-list .track-header:first-child {
            background-color: #131b28;
            color: #FFFFFF;
            margin-top: 0;
        }
        .track-list > div {
            display: flex;
            align-items: center;
            border-bottom: solid 2px #f2f2f2;
            gap: 20px;
        }
        .track-list > div:not(.track-header) {
            padding-bottom: 15px;
        }
        .track-list > div.track-before-header {
            border-bottom: none;
            padding-bottom: 0;
        }
        .track-list > div > div a {
            color: #000000;
        }
        .track-list > div > div a:hover {
            color: #0a79a4;
        }
        .track-list > div > div:first-child {
            padding-left: 14px;
        }
        .track-list > div > div.album-img {
            width: 60px;
        }
        .track-list > div > div.album-img a img {
            width: 100%;
            aspect-ratio: 1/1;
        }
        .track-list > div > div:nth-child(3) {
            flex: 1;
        }
        .track-list > div > div:nth-child(3) a {
            display: inline-block;
            font-weight: 700;
            margin-bottom: 6px;
        }
        .track-list > div > div:nth-child(4) {
            display: none;
            flex: 1;
        }
        .track-list > div > div i {
            cursor: pointer;
            margin-right: 14px;

        }
        .track-list > div > div i svg path {
            transition: fill 0.35s;
        }
        .track-list > div > div i:hover svg path {
            fill: #0a79a4;
        }
        .track-list > div > div:nth-child(4) span {
            margin-left: 8px;
            color: #575757;
        }
        @media (min-width: 576px) {
            .track-list > div > div:nth-child(3) {
                width: 200px;
            }
            .track-list > div > div:nth-child(4) {
                display: block;
            }
        }
        @media (min-width: 768px) {
            .track-list > div > div:nth-child(3) {
                width: 250px;
            }
            .track-list > div > div.album-img {
                width: 100px;
            }
        }
    </style>

    <script defer>
        const client_id = '49d373d2f6ba41b983353e6a63a212fe';
        const client_secret = '04d179ad9052446798f25481f9598af3';
        const playlistId = '5ABHKGoOzxkaa28ttQV9sE';
        const numberOfTracks = 100;

        const getAccessToken = async () => {
          const response = await fetch('https://accounts.spotify.com/api/token', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
              'Authorization': 'Basic ' + btoa(`${client_id}:${client_secret}`)
            },
            body: 'grant_type=client_credentials'
          });

          const data = await response.json();
          return data.access_token;
        };

        const getTopTracks = async () => {
          const token = await getAccessToken();
          const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=${numberOfTracks}`, {
            headers: {
              'Authorization': `Bearer ${token}`
            }
          });

          const data = await response.json();

          const topTracks = data.items.map((item, index) => ({
            rank: index + 1,
            name: item.track.name,
            playcount: item.track.play_count,
            artist: item.track.artists.map(artist => artist.name).join(', '),
            url: item.track.external_urls.spotify,
            album: {
                name: item.track.album.name,
                release_date: item.track.album.release_date,
                url: item.track.album.external_urls.spotify,
                images: item.track.album.images
            }
          }));

          displayTopTracks(topTracks);
        };

        const getPlaylist = async () => {
            const token = await getAccessToken();
            const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}`, {
                headers: {
                  'Authorization': `Bearer ${token}`
                }
            });

            const playlist = await response.json();
            var playlistDisplayName = `"${playlist.name}"`;

            if(playlist.owner.display_name !== null)
            {
                playlistDisplayName += ` by ${playlist.owner.display_name}`;
            }

            document.querySelectorAll('.playlist-name').forEach(ele => {
                ele.innerText = playlist.name;
            });

            var html = '<section>';
            html += `<p>The data in this article is kept up to date by automatically using Spotify's Web API for Developers. Data for track play count is not accessible via the API, so we are pulling these songs from a playlist titled "<a href="${playlist.external_urls.spotify}" target="_blank">${playlist.name}</a>"`;
            html += (playlist.owner.display_name !== null) ? ` by ${playlist.owner.display_name}.` : `.`;
            html += '</p>';
            html += '</section>';

            document.querySelector('.blog-body').innerHTML += html;

        };

        const loadPlayer = function(ele)
        {
            const trackId = ele.dataset.track;
            const track = ele.closest('.track');
            const trackPlayers = document.querySelectorAll('.track-player');

            trackPlayers.forEach(player => {
                player.remove();
            });

            if (track)
            {
                const newDiv = document.createElement('div');
                newDiv.className = 'track-player';
                newDiv.innerHTML = `<iframe style="border-radius:12px" src="https://open.spotify.com/embed/track/${trackId}?utm_source=generator&theme=0" width="100%" height="152" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`;

                track.parentNode.insertBefore(newDiv, track.nextSibling);
            }
        }

        const getHeader = function()
        {
            var html = '<div class="track-header">';
            html += `<div>#</div><div class="album-img"></div><div>Song</div><div>Album</div>`;
            html += '</div>';

            return html;
        }

        const displayTopTracks = (tracks) => {

            if(tracks.length)
            {
                var html = '<div class="track-list">';

                html += getHeader();

                tracks.forEach(track => {

                    var trackParts = track.url.split('/');
                    var trackId = trackParts[trackParts.length - 1];

                    if(track.rank === 1)
                    {
                        var trackPlayer = document.querySelector('.track-player');

                        if(trackPlayer)
                        {
                            trackPlayer.innerHTML = `<iframe style="border-radius:12px" src="https://open.spotify.com/embed/track/${trackId}?utm_source=generator&theme=0" width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`;
                        }

                        document.querySelectorAll('.top-track-name').forEach(ele => {
                            ele.innerText = track.name;
                        });

                        document.querySelectorAll('.top-artist-name').forEach(ele => {
                            ele.innerText = track.artist;
                        });

                        document.querySelectorAll('.top-album-name').forEach(ele => {
                            ele.innerText = track.album.name;
                        });
                    }

                    html += (track.rank % 20 === 0) ? '<div class="track track-before-header">' : '<div class="track">';
                    html += `<div>${track.rank}</div><div class="album-img"><a title="Open the song '${track.name}' in Spotify" href="${track.url}" target="_blank"><img src="${track.album.images[0].url}" /></a></div>`;
                    html += `<div><a title="Open the song '${track.name}' in Spotify" href="${track.url}" target="_blank">${track.name}</a><br><span>${track.artist}</span></div>`;
                    html += `<div><a title="Open the album '${track.album.name}' in Spotify" href="${track.album.url}" target="_blank">${track.album.name}</a> <span>(${track.album.release_date.split('-')[0]})</span></div>`;
                    html += `<div><i data-track="${trackId}" onclick="loadPlayer(this);">{% include '_includes/icons' with { type: 'play' } %}</i></div>`;
                    html += '</div>';

                    if(track.rank < numberOfTracks && track.rank % 20 === 0)
                    {
                        html += getHeader();
                    }
                });

                html += '</div>';

                document.querySelector('.blog-body').innerHTML += html;
            }

            getPlaylist();
        };

        getTopTracks().catch(error => {
          console.log('Error fetching top tracks:' + error);
        });

    </script>
{% endif %}