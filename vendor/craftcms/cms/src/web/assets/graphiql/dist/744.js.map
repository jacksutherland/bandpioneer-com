{"version":3,"file":"744.js","mappings":"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","sources":["webpack:///../../../../../node_modules/codemirror/addon/edit/matchbrackets.js","webpack:///../../../../../node_modules/codemirror/addon/search/searchcursor.js","webpack:///../../../../../node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["CodeMirror","ie_lt8","test","navigator","userAgent","document","documentMode","Pos","matching","bracketRegex","config","findMatchingBracket","cm","where","line","getLineHandle","pos","ch","afterCursor","getWrapperElement","className","re","match","text","charAt","dir","strict","style","getTokenTypeAt","found","scanForBracket","from","to","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","Math","min","lastLine","max","firstLine","lineNo","getLine","length","end","undefined","push","pop","matchBrackets","autoclear","maxHighlightLen","state","maxHighlightLineLength","highlightNonMatching","marks","ranges","listSelections","i","empty","head","markText","focused","focus","clear","operation","setTimeout","doMatchBrackets","currentlyHighlighted","clearHighlighted","defineOption","val","old","Init","off","on","defineExtension","this","oldConfig","mod","doFold","noFold","ensureFlags","regexp","flags","current","ignoreCase","global","multiline","regexpFlags","target","indexOf","RegExp","source","maybeMultiline","searchRegexpForward","doc","start","last","lastIndex","string","exec","index","searchRegexpForwardMultiline","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","foldFunc","mid","len","searchStringForward","query","caseFold","fold","lines","search","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","atOccurrence","afterEmptyMatch","clipPos","matches","reverse","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","cmpPos","result","replace","newText","origin","splitLines","replaceRange","defineDocExtension","cur","getSearchCursor","getCursor","anchor","setSelections","cmds","commands","moveSubword","extendSelectionsBy","range","display","shift","extend","type","startPos","e","next","cat","isWordChar","toUpperCase","findPosSubword","insertLine","above","isReadOnly","Pass","newSelection","at","indentLine","execCommand","wordAt","word","addCursorToSelection","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","getRange","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","closing","puncType","sortLines","caseSensitive","direction","selected","toSort","sort","a","b","au","bu","modifyWordOrSelection","indices","replacements","replaceSelections","getTarget","findAndGoTo","selectScope","goToBracket","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","duplicateLine","rangeCount","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","k","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime"],"sourceRoot":""}